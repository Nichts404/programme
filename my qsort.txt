// my qsort function
//排序方法
int sort_nums(const void* e1, const void* e2)
{
	return *(int*)e1 - *(int*)e2;
}
//typedef struct st
//{
//	char name[20];
//	int age;
//}Stu;

//int sort_by_age(const void* e1, const void* e2)
//{
//	return ((Stu*)e1)-> age - ((Stu*)e2) -> age;
//}
// 排序部分实现
void Swap(char* buf1,char*buf2,int width)
{
	int i = 0;
	for (i = 0; i < width; i++)
	{
		char tmp = *buf1;
		*buf1 = *buf2;
		*buf2 = tmp;
		buf1++;
		buf2++;
	}
}
void bubble_sort(void* base,int sz,int width,int (*cmp)(void* e1,void* e2))
{
	int i = 0;
	for (i = 0; i < sz - 1; i++)
	{
		int j = 0;
		for (j = 0; j < sz - 1 - i; j++)
		{
			if (cmp((char*)base+j*width, (char*)base + (j+1)*width) > 0)
			{
				Swap((char*)base + j*width, (char*)base + (j + 1)*width,width);
			}
		}
	}
}

int main()
{
	int arr1[] = { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 };
	//Stu s[3] = { {"zhangsan",20}, {"lisi",30}, {"wangwu",10} };
	int sz = sizeof(arr1) / sizeof(arr1[0]);
	//qsort(s, sz, sizeof(s[0]), sort_by_age);
	bubble_sort(arr1,sz,sizeof(arr1[0]),sort_nums);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%d ", arr1[i]);
	}
	return 0;
}